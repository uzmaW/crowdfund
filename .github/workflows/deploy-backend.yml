name: Deploy Go Backend to GCP Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: crowdfund-backend
  REGION: us-central1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # Skip deployment steps on PRs for security
    env:
      DEPLOY_FROM_PR: ${{ github.event_name != 'pull_request' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Cloud SDK
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Authenticate to Google Cloud
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and push Docker image
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        env_vars: |
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          
    - name: Show Output
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      run: echo ${{ steps.deploy.outputs.url }}
