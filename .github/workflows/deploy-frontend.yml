name: Deploy Vue App to GCP

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # Skip deployment steps on PRs for security
    env:
      GCP_BUCKET_REGION: us-central1
      DEPLOY_FROM_PR: ${{ github.event_name != 'pull_request' }}
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Build Vue application
      run: npm run build
      
    # Authenticate directly with service account key
    - name: Authenticate to Google Cloud
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        
    - name: Set up gcloud CLI
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Generate or use bucket name
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      id: bucket-name
      run: |
        if [ -n "${{ secrets.GCP_BUCKET_NAME }}" ]; then
          echo "BUCKET_NAME=${{ secrets.GCP_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "Using provided bucket name: ${{ secrets.GCP_BUCKET_NAME }}"
        else
          REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]' | tr '_' '-')
          TIMESTAMP=$(date +%s | cut -c 1-6)
          AUTO_BUCKET_NAME="${REPO_NAME}-${TIMESTAMP}"
          AUTO_BUCKET_NAME=$(echo $AUTO_BUCKET_NAME | cut -c 1-63 | tr '[:upper:]' '[:lower:]' | tr '_' '-')
          
          echo "BUCKET_NAME=$AUTO_BUCKET_NAME" >> $GITHUB_ENV
          echo "Generated bucket name: $AUTO_BUCKET_NAME"
        fi
    
    - name: Check if bucket exists and create if needed
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      run: |
        if ! gsutil ls -b gs://${{ env.BUCKET_NAME }} > /dev/null 2>&1; then
          echo "Bucket doesn't exist. Creating bucket gs://${{ env.BUCKET_NAME }}..."
          gsutil mb -l ${{ env.GCP_BUCKET_REGION }} gs://${{ env.BUCKET_NAME }}
          gsutil web set -m index.html -e 404.html gs://${{ env.BUCKET_NAME }}/
          gsutil iam ch allUsers:objectViewer gs://${{ env.BUCKET_NAME }}/
          echo "Bucket created successfully!"
        else
          echo "Bucket gs://${{ env.BUCKET_NAME }} already exists."
        fi
        
    - name: Upload build to GCS bucket
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      run: |
        gsutil -m cp -r dist/* gs://${{ env.BUCKET_NAME }}/
        gsutil -m setmeta -h "Cache-Control:public, max-age=3600" gs://${{ env.BUCKET_NAME }}/**
        
    - name: Set website configuration
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      run: |
        gsutil web set -m index.html -e 404.html gs://${{ env.BUCKET_NAME }}/
        
    - name: Make bucket contents public
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      run: |
        gsutil iam ch allUsers:objectViewer gs://${{ env.BUCKET_NAME }}/
        
    - name: Print deployment URL and bucket info
      if: ${{ env.DEPLOY_FROM_PR == 'true' }}
      run: |
        echo "üöÄ Deployed to https://storage.googleapis.com/${{ env.BUCKET_NAME }}/index.html"
        echo "üìù Or if you have domain mapping: https://${{ env.BUCKET_NAME }}"
        
        if [ -z "${{ secrets.GCP_BUCKET_NAME }}" ]; then
          echo "‚úÖ GENERATED BUCKET NAME: ${{ env.BUCKET_NAME }}"
          echo "Save this bucket name for future deployments if needed."
        fi
